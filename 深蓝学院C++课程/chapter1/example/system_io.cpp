#include <iostream>
/*******************   输乳流: cin  *****************************************
 *  用法：先定义一个变量 a ，然后使用 cin  指向这个变量，最后程序运行的时候，
 *  就会提示您输入一个数字给该变量赋值：
 *  如： cin >> a ;
**************************************************************************/

/********************** 输出流: cout / cerr / clog ****************************
 *     std::cout 标准输出流，可以被重定向.
 *     std::cerr 标准错误输出流  对应与C 语言中的 stderr ，用于显示错误信息，其会立即刷新缓冲区，无需等待缓冲区满，因此比较可以及时地输出一些关键信息
 *     std::clog  标准日志输出流 ，其不会及时刷新缓冲区，因此当程序意外终止的时候，可能来不及想屏幕或者重定向文件输出 日志 log.
 *
 *************************************************************************/

/*******************  主动刷新 输入缓冲区 : std::flush / std::endl ****************************
 * 
 *     std::flush :  强制刷新缓冲区 ，
 *  
 *     std::endl： 换行 + 强制刷新缓冲区 ，
 * 
 ****************************************************************************************/


int main()
{
    // 输入流 cin 、输出流 cout 的使用例子
    std::cout<< "please input a number : "<<std::endl;
    double a;
    std::cin>>a;
    std::cout<<" your input data is:  "<<a <<std::endl;
    std::cerr<<"cerr data:  "<<a;

    std::cout<< "please input another number : ";
    double b;
    std::cin>>b;
    std::cout<<" your input data is:  "<<b <<std::endl;

    // 输出流 cerr 的使用例子
    std::cout<<"cout data : "<<a;   // 程序结束之后才会刷新
    
    std::clog<<"clog data : "<<a;

    return 0;
}